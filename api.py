from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import tempfile
import os
import reporter
import traceback

app = Flask(__name__)
CORS(app)


@app.route('/process', methods=['POST'])
def process_upload():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No selected file'}), 400

    with tempfile.TemporaryDirectory() as tmpdir:
        try:
            save_path = os.path.join(tmpdir, file.filename)
            file.save(save_path)
            # For now return a short test report describing the uploaded file
            try:
                size = os.path.getsize(save_path)
            except Exception:
                size = None

            report = {
                'file_name': file.filename,
                'file_size': size,
                'file_type': file.mimetype,
                'note': 'This is a test report generated by the AI API placeholder.'
            }
            return jsonify({'report': report})
        except Exception as e:
            traceback.print_exc()
            return jsonify({'error': str(e)}), 500


@app.route('/report', methods=['GET'])
def get_report():
    path = request.args.get('path')
    if not path:
        return jsonify({'error': 'Missing `path` parameter'}), 400

    # Normalize and validate
    try:
        # Basic normalization
        path = os.path.normpath(path)
    except Exception:
        return jsonify({'error': 'Invalid path parameter'}), 400

    if not os.path.exists(path):
        return jsonify({'error': 'Report not found', 'path': path}), 404

    if not os.path.isfile(path):
        return jsonify({'error': 'Path is not a file', 'path': path}), 400

    try:
        return send_file(path, as_attachment=True)
    except Exception as e:
        # Log full traceback server-side and return sanitized message to client
        import traceback
        traceback.print_exc()
        return jsonify({'error': 'Failed to send file', 'details': str(e)}), 500


@app.route('/', methods=['GET'])
def index():
    return jsonify({'status': 'AI API running', 'routes': ['/process (POST)', '/report?path=... (GET)']})


if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
